
函数式样属于一种编程规范.主要思想是把运算过程尽量写成一系列嵌套的函数调用。
主要特点
1 函数可以和其他数据类型一样赋值给变量，也可以作为参数传给其他函数。或者作为其他函数的返回值
2 只用‘表达式’，不用‘语句’（尽量少用语句。语句属于对系统的读写操作）
3没有副作用。 函数保持独立，不修改外部变量
4 不修改状态



好处 1易于理解 2 易于并发编程（没有副作用，不用担心变量互相修改）

python 函数式编程
1 不要在lists上迭代。使用map和reduce
map(映射)
 map接受一个方法和一个集合作为参数。他创建一个新的空集合，以每一个集合中的的原作作为参数调用这个传入的方法，
   然后把返回值插入到新创建的集合中。最后返回新集合
  .1eg name_length = map(len, ["Mary", "Isla", "Sam"])
  print name_lengths  #=》 [4, 4, 3]
  
  。2 对传入集合的每个元素做平方操作
   eg squares = map(lambda x: x * x, [0,1,2,3,4])
    squares值 [0,1,4,9,16]
reduce(迭代)
  Reduce接受一个方法和一个集合做参数。返回通过这个方法迭代容器中所有元素产生的结果
  eg 返回集合中所有元素的和
      sum = reduce(lambda x,y:x + y,[0, 1, 2, 3,4])
      print sum  sum值为 10
    
Filter接受一个方法和一个集合。返回集合中使方法返回true的元素  
    
